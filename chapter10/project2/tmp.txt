```ch10-proj02.html
<!DOCTYPE html>
<html lang="en-US">
<head>
  <meta charset="UTF-8">  
  <title>Chapter 10</title>   
  <link href="https://fonts.googleapis.com/css2?family=Cormorant+Garamond:ital,wght@0,400;0,600;0,700;1,400;1,500&family=Roboto+Condensed:wght@400;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="ch10-proj02.css">
  <script src="play-module.js" type="module"></script> 
  <script src="ch10-proj02.js" type="module"></script> 
</head>

<body>
  <header>
    <h1>Shakespeare Play Viewer</h1>
  </header>
  
  <main>
    <aside>
      <select id="playList">
        <option value=0>Choose a Play</option>
        <option value="hamlet">Hamlet</option>
        <option value="jcaesar">Julius Caesar</option>
      </select>
      <fieldset id="interface">
        <select id="actList"></select>
        <select id="sceneList"></select>
        <fieldset>
          <select id="playerList">
            <option value=0>All Players</option>
          </select>
          <input type="text" id="txtHighlight" placeholder="Enter a search term">
          <button id="btnHighlight">Filter</button>
        </fieldset>
      </fieldset>
    </aside>
    
    <section id="playHere">
      <h2>Play Title Here</h2>
      <article id="actHere">
        <h3>Act Name Here</h3>
        <div id="sceneHere">
          <h4>Scene Name Here</h4>
          <p class="title">Scene Title</p>
          <p class="direction">Stage Direction</p>
          <div class="speech"><span>BERNARDO</span><p>Who's there?</p></div>
          <div class="speech"><span>FRANCISCO</span><p>Nay, answer me: <b>stand</b>, and unfold yourself.</p></div>
          <div class="speech"><span>MARCELLUS</span><p>'Tis gone!</p><p>We do it wrong, being so majestical,</p><p>To offer it the show of violence;</p><p>For it is, as the air, invulnerable,</p><p>And our vain blows malicious mockery.</p><em>Exit Ghost</em></div>
        </div>
      </article>
    </section>
  </main>
</body>
</html>
```

```ch10-proj02.js
import Play from './play-module.js';

document.addEventListener("DOMContentLoaded", () => {
  const url = 'https://www.randyconnolly.com/funwebdev/3rd/api/shakespeare/play.php';
  
  const playList = document.querySelector('#playList');
  const actList = document.querySelector('#actList');
  const sceneList = document.querySelector('#sceneList');
  const playHere = document.querySelector('#playHere');
  
  let playData = {};
  const playHereBackup = playHere.innerHTML;
  
  playList.addEventListener('change', async (e) => {
    const newUrl = url + `?name=${e.target.value}`;
    
    try {
      const response = await fetch(newUrl);
      const data = await response.json();
      
      actList.innerHTML = '';
      sceneList.innerHTML = '';
      playData = data;
      
      if (Array.isArray(data.acts)) {
        let firstAct = true;
        
        data.acts.forEach(act => {
          populateSelectList(act.name, actList);
          
          if (firstAct) {
            let firstScene = true;
            
            act.scenes.forEach(scene => {
              populateSelectList(scene.name, sceneList);
              
              if (firstScene) {
                const display = new Play(playData, playHere);
                display.displayPlay(act.name, scene.name);
                firstScene = false;
              }
            });
            
            firstAct = false;
          }
        });
      } else {
        playHere.innerHTML = playHereBackup;
      }
    } catch (error) {
      console.error(error);
    }
  });
  
  actList.addEventListener('change', (e) => {
    const selectedAct = playData.acts.find(act => act.name === e.target.value);
    let firstScene = true;
    
    sceneList.innerHTML = '';
    
    selectedAct.scenes.forEach(scene => {
      populateSelectList(scene.name, sceneList);
      
      if (firstScene) {
        const display = new Play(playData, playHere);
        display.displayPlay(selectedAct.name, scene.name);
        firstScene = false;
      }
    });
  });
  
  sceneList.addEventListener('change', (e) => {
    const selectedAct = playData.acts.find(act => act.name === actList.value);
    const selectedScene = selectedAct.scenes.find(scene => scene.name === e.target.value);
    const display = new Play(playData, playHere);
    display.displayPlay(selectedAct.name, selectedScene.name);
  });
  
  function populateSelectList(content, selectList) {
    const option = document.createElement('option');
    option.textContent = content;
    option.value = content;
    selectList.appendChild(option);
  }
});
```

```play-module.js
class Play {
  constructor(playData, playHere) {
    this.title = playData.title;
    this.acts = playData.acts.map(act => new Act(act));
    this.playHere = playHere;
  }

  displayPlay(actName, sceneName) {
    this.playHere.innerHTML = '';

    const h2 = document.createElement('h2');
    h2.textContent = this.title;
    this.playHere.appendChild(h2);

    const article = document.createElement('article');
    article.setAttribute('id', 'actHere');
    
    const selectedAct = this.acts.find(act => act.name === actName);
    selectedAct.displayAct(article, sceneName);

    this.playHere.appendChild(article);
  }
}

class Act {
  constructor(actData) {
    this.name = actData.name;
    this.scenes = actData.scenes.map(scene => new Scene(scene));
  }

  displayAct(container, sceneName) {
    const h3 = document.createElement('h3');
    h3.textContent = this.name;
    container.appendChild(h3);

    const div = document.createElement('div');
    div.setAttribute('id', 'sceneHere');

    const selectedScene = this.scenes.find(scene => scene.name === sceneName);
    selectedScene.displayScene(div);

    container.appendChild(div);
  }
}

class Scene {
  constructor(sceneData) {
    this.name = sceneData.name;
    this.title = sceneData.title;
    this.stageDirection = sceneData.stageDirection;
    this.speeches = sceneData.speeches;
  }

  displayScene(container) {
    const h4 = document.createElement('h4');
    h4.textContent = this.name;
    container.appendChild(h4);

    const p1 = document.createElement('p');
    p1.className = 'title';
    p1.textContent = this.title;
    container.appendChild(p1);

    const p2 = document.createElement('p');
    p2.className = 'direction';
    p2.textContent = this.stageDirection;
    container.appendChild(p2);

    this.speeches.forEach(speech => {
      const speechDiv = document.createElement('div');
      speechDiv.className = 'speech';

      const span = document.createElement('span');
      span.textContent = speech.speaker;
      speechDiv.appendChild(span);

      speech.lines.forEach(line => {
        const p = document.createElement('p');
        p.textContent = line;
        speechDiv.appendChild(p);
      });

      if (speech.stagedir) {
        const em = document.createElement('em');
        em.textContent = speech.stagedir;
        speechDiv.appendChild(em);
      }

      container.appendChild(speechDiv);
    });
  }
}

export default Play;
```

Okay?